for循环里面 给每一个dom对象加动作的时候遇到的问题
for循环会覆盖每一次的 函数
试了在 匿名函数里面 传递 迭代值 然而并不行  没有触发动作的情况下就直接执行了
然后在 function里面 弄了 闭包还是不行
最后把 动作放在闭包里面才成功了
百度到了 闭包的3种实现方式  在ES5的情况下

闭包是值有权访问另外一个函数作用域中的变量的函数

第一种是: 在函数的内部再创建一个函数,通过这个新建函数访问外部函数的局部变量
aee[i] = (function (num){
return num;
})(i);


第二种是: 在新建函数里面再加一个匿名函数
arr[i] = (function (num){return function(){return num;};})(i);
和第二种一样啊,虽然最里面的匿名函数 访问了外层匿名函数的num
感觉应该把第一个匿名函数的i和num  去掉 再里面加 var num = i;就好多了和第一个区分一下 不然没看出来有啥不同啊

第三个写法是: 如果给一个变量赋一个匿名函数 第一对括号是可以去掉的   所以
arr[i] = function (num){return num;}(i);


还有就是今天遇到的 getElementsByTagName("ad")
显示的是第一个对象,但是并不能对第一个对象进行操作    必须要在最后加[0]才行
还有就是浏览器在加载第一次的时候 selected = true;并没有成功  在 selected = 'selected' 之后刷新了浏览器之后再改为selected = true;就可以了
还有就是 一个字符串对象 不能通过string.length == 0 来判断是不是长度为0  要用txt.length === 0 强类型的判断才行

非对称加密:私钥签名 公钥加密;私钥解密  公钥解签
	   发送信息的一方,用自己的私钥签名,然后用对方的公钥加密
	   接受信息的一方,用自己的私钥解密,然后用自己的公钥验证签名

真的是,js为啥也不预编译一下,
函数声明 如果有重名  后面的覆盖前面的  醉了  
绑定事件的时候 后面的函数的会覆盖前面的函数
醉了
