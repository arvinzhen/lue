今天看了闭包
回调函数,在循环里面等待执行,需要等到循环结束才能执行
还有就是相同的函数声明,后声明的会覆盖先声明
感觉 那个循环里面的回调函数需要等循环结束才能执行,和这个有点像
后面的声明覆盖了前面的声明不确定是不是这个意思
循环里面直接加回调函数肯定不行
然后 IIFE也不行,因为IIFE里面的作用域 是 块作用域 还没有接受到
只是封闭了作用域,还没有接受到每次迭代的变量
首先共享 变量的话 就会出错,就会先循环结束,达不到需求
其次封闭了当前的作用域也不行,没有东西把两个作用域链接起来
以下是具体的函数  version1
for (var i = 0; i <=10; i++){
setTimeout(function (){console.log(i);}, 1000);
}
打印的结果是10个11

version2
for (var i = 0; i <= 10; i++){
(function (){
setTimeout(function (){
console.log(i);
}, 1000);
})();
}
打印的结果还是10个11

Version3
for (var i = 0; i <= 10; i++){
(function (){
var j = i;
setTimeout(function (){
console.log(j);
},1000);
})();
}
就是一次打印迭代的值

version4
for (var i = 0; i <= 10; i++){
(fucntion (j){
setTimeout(function (){
console.log(j);
},1000);
})(i);
}
结束
